# ---------------------------------------------
#  koffee-candle workspace / library manifest
#  — targets desktop (native) by default —
#      ▸ production-ready build: `cargo build`
#      ▸ development build:      `cargo build --features dev`
#      ▸ WASM (browser):         `cargo build --target wasm32-unknown-unknown --features web`
# ---------------------------------------------

[package]
name = "koffee"
version.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
description = "Cross-platform wake-word detector: Candle ⚡ KFC front-end"
readme = "README.md"
keywords = ["wake-word", "detection", "candle", "ml", "audio"]
categories = ["multimedia::audio", "science", "algorithms"]
authors = ["David Maple <david@cyrup.ai>"]

# ------------------------------------------------
#  Dependencies
# ------------------------------------------------
[dependencies]
# fluent-voice-workspace-hack = { path = "../../workspace-hack" }
fluent_voice_domain = { path = "../domain" }

# — DSP / NN (base dependencies - no acceleration features) —
candle-core = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false }
candle-nn = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false }
candle-transformers = { git = "https://github.com/huggingface/candle", branch = "main", default-features = false }

# — audio / resampling —
# rubato is in workspace-hack
# rustfft is in workspace-hack
hound = "3.5.1"
symphonia = { version = "0.5.4", features = ["all"], optional = true }

# — containers / utils —
arrayvec = "0.7.6"
# smallvec is in workspace-hack
indexmap = "2.10.0"
thiserror = "2"
# log is in workspace-hack

# — serde / misc —
# serde is in workspace-hack
# serde_json is in workspace-hack
ciborium = "0.2.2"
# strum is in workspace-hack

# — optional parallelism (desktop only) —
rayon = { version = "1", optional = true }

# — browser bindings (wasm32 build only) —
wasm-bindgen = { version = "0.2.100", optional = true }
js-sys = { version = "0.3.77", optional = true }
web-sys = { version = "0.3.77", features = [
    "MediaDevices",
    "MediaStream",
    "AudioContext",
    "console",
], optional = true }
console_error_panic_hook = { version = "0.1.7", optional = true }
anyhow = "1"
rustfft = "6.4.0"
strum = { version = "0.27.2", features = ["derive"] }
rubato = { version = "0.16.2", optional = true }
serde = { version = "1.0.219", features = ["derive"] }
smallvec = "2.0.0-alpha.11"
log = "0.4.27"
clap = { version = "4", features = ["derive"] }
# tokio is in workspace-hack
# clap is in workspace-hack

# — Optional acceleration dependencies —
half = { version = "2.6.0", optional = true }

# Platform-specific acceleration dependencies
cudarc = { version = "0.17", optional = true, default-features = false, features = [
    "cublas",
    "cublaslt",
    "cudnn",
    "curand",
    "dynamic-linking",
    "f16",
    "std",
] }
metal = { version = "0.32.0", optional = true }
bindgen_cuda = { version = "0.1.5", optional = true }
candle-kernels = { git = "https://github.com/huggingface/candle", branch = "main", optional = true }
candle-metal-kernels = { git = "https://github.com/huggingface/candle", branch = "main", optional = true }

# — Optional ML/data dependencies —
hf-hub = { version = "0.4.3", features = ["tokio"], optional = true }
image = { version = "0.25.6", optional = true }
num-traits = { version = "0.2", optional = true }
palette = { version = "0.7.6", optional = true }
enterpolation = { version = "0.3.0", optional = true }
pyo3 = { version = "0.25.1", features = [
    "auto-initialize",
    "abi3-py311",
], optional = true }
pdf2image = { version = "0.1.3", optional = true }
safetensors = { version = "0.6", optional = true }
serde_json = "1"
tokenizers = { version = "0.21.4", features = ["onig"] }
csv = { version = "1.3.1", optional = true }
cpal = { version = "0.16.0", features = ["asio", "jack"] }
ctrlc = "3.4.7"
parking_lot = "0.12.4"
env_logger = "0.11.8"
mio = { version = "1.0.4", features = ["os-ext", "os-poll"] }
slab = "0.4"
crossbeam-channel = "0.5.15"
# dia = { version = "0.1.0", path = "../dia" }  # Temporarily disabled
toml = "0.9"
tracing = "0.1.41"
jwalk = "0.8.1"
dia = { version = "0.1.0", path = "../dia" }
tokio = { version = "1", features = ["rt-multi-thread", "macros", "time"] }
fluent-voice-workspace-hack = { path = "../../workspace-hack" }

[dev-dependencies]
tokio = { version = "1", features = ["rt-multi-thread", "macros", "time"] }
tempfile = "3.20.0"
byteorder = "1.5.0"
imageproc = "0.25.0"
memmap2 = "0.9.7"
rand = "0.9.2"
ab_glyph = "0.2.31"
tracing = "0.1.41"
tracing-chrome = "0.7.2"
tracing-subscriber = "0.3.19"
rustpotter = "3.0.2"
approx = "0.5.1"

# OS-specific acceleration dependencies
[target.'cfg(all(target_os = "linux", target_arch = "x86_64"))'.dependencies]
intel-mkl-src = { version = "0.8.1", optional = true }

[target.'cfg(all(target_os = "windows", target_arch = "x86_64"))'.dependencies]
intel-mkl-src = { version = "0.8.1", optional = true }

[target.'cfg(target_os = "macos")'.dependencies]
accelerate-src = { version = "0.3.2", optional = true }

[build-dependencies]
anyhow = "1"

# ------------------------------------------------
#  Feature flags
# ------------------------------------------------
[features]
# ───────────── default: desktop, release-ready ─────────────
default = ["desktop"]

# --- Core build flavours -----------------------------------
desktop = [
    "rayon",
    "metal",
] # native build – includes SIMD & Rayon & Metal acceleration
web = [
    "wasm-bindgen",
    "js-sys",
    "web-sys/Window",
    "console_error_panic_hook",
] # wasm32-unknown-unknown target

# --- Developer conveniences (opt-in) -----------------------
dev = ["debug", "desktop"] # ← enable with `--features dev`
debug = []                 # extra logging / assertions

# --- Candle backend features (required for all candle crates) -----
cuda = [
    "dep:cudarc",
    "dep:bindgen_cuda",
    "dep:candle-kernels",
    "candle-core/cuda",
    "candle-nn/cuda",
    "candle-transformers/cuda",
]
cudnn = ["cuda", "cudarc/cudnn"]
metal = [
    "dep:metal",
    "dep:candle-metal-kernels",
    "candle-core/metal",
    "candle-nn/metal",
    "candle-transformers/metal",
]
accelerate = [
    "dep:accelerate-src",
    "candle-core/accelerate",
    "candle-nn/accelerate",
    "candle-transformers/accelerate",
]
mkl = [
    "dep:intel-mkl-src",
    "candle-core/mkl",
    "candle-nn/mkl",
    "candle-transformers/mkl",
]

# --- Optional extended functionality -----------------------
record = []                                              # WAV recording of detection windows
display = []                                             # SVG / terminal visualisations
audio = []                                               # gate any OS-specific audio I/O that may be added
microphone = ["dep:rubato"]
encodec = ["dep:symphonia", "dep:rubato"]
mimi = ["dep:symphonia", "dep:rubato"]
snac = ["dep:symphonia", "dep:rubato"]
depth_anything_v2 = ["dep:palette", "dep:enterpolation"]
rayon = ["dep:rayon"]

# Ensure mutually-exclusive defaults:
# (cargo resolves additive sets – desktop or web must be explicit)
